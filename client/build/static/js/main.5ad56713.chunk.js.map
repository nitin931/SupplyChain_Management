{"version":3,"sources":["AssignRoles.js","Home.js","AddMed.js","Supply.js","Track.js","App.js","index.js"],"names":["AssignRoles","history","useHistory","useEffect","loadWeb3","loadBlockchaindata","_useState","useState","_useState2","_slicedToArray","currentaccount","setCurrentaccount","_useState3","_useState4","loader","setloader","_useState5","_useState6","SupplyChain","setSupplyChain","_useState7","_useState8","RMSname","setRMSname","_useState9","_useState10","MANname","setMANname","_useState11","_useState12","DISname","setDISname","_useState13","_useState14","RETname","setRETname","_useState15","_useState16","RMSplace","setRMSplace","_useState17","_useState18","MANplace","setMANplace","_useState19","_useState20","DISplace","setDISplace","_useState21","_useState22","RETplace","setRETplace","_useState23","_useState24","RMSaddress","setRMSaddress","_useState25","_useState26","MANaddress","setMANaddress","_useState27","_useState28","DISaddress","setDISaddress","_useState29","_useState30","RETaddress","setRETaddress","_useState31","_useState32","RMS","setRMS","_useState33","_useState34","MAN","setMAN","_useState35","_useState36","DIS","setDIS","_useState37","_useState38","RET","setRET","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","window","ethereum","web3","Web3","enable","currentProvider","alert","stop","apply","arguments","_ref2","_callee2","accounts","account","networkId","networkData","supplychain","i","rmsCtr","rms","manCtr","man","disCtr","dis","retCtr","ret","_context2","eth","getAccounts","sent","net","getId","SupplyChainABI","networks","Contract","abi","address","methods","call","_jsx","children","className","handlerSubmitRMS","_ref3","_callee3","event","_context3","preventDefault","addRMS","send","from","t0","_x","handlerSubmitMAN","_ref4","_callee4","_context4","addManufacturer","_x2","handlerSubmitDIS","_ref5","_callee5","_context5","addDistributor","_x3","handlerSubmitRET","_ref6","_callee6","_context6","addRetailer","_x4","_jsxs","onClick","push","onSubmit","type","onChange","target","value","placeholder","required","scope","Object","keys","map","key","id","name","place","addr","Home","AddMed","MED","setMED","MedName","setMedName","MedDes","setMedDes","MedStage","setMedStage","medCtr","med","medStage","medicineCtr","MedicineStock","showStage","handlerSubmitMED","addMedicine","description","Supply","ID","setID","handlerChangeID","handlerSubmitRMSsupply","RMSsupply","handlerSubmitManufacturing","Manufacturing","handlerSubmitDistribute","Distribute","handlerSubmitRetail","Retail","handlerSubmitSold","_ref7","_callee7","_context7","sold","_x5","Track","TrackTillSold","showTrackTillSold","TrackTillRetail","showTrackTillRetail","TrackTillDistribution","showTrackTillDistribution","TrackTillManufacture","showTrackTillManufacture","TrackTillRMS","showTrackTillRMS","TrackTillOrdered","showTrackTillOrdered","RMSid","MANid","DISid","RETid","handlerSubmit","ctr","stage","App","Router","Switch","Route","path","exact","component","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ad56713.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from \"web3\";\r\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nfunction AssignRoles() {\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        loadWeb3();\r\n        loadBlockchaindata();\r\n    }, [])\r\n    const [currentaccount, setCurrentaccount] = useState(\"\");\r\n    const [loader, setloader] = useState(true);\r\n    const [SupplyChain, setSupplyChain] = useState();\r\n    const [RMSname, setRMSname] = useState();\r\n    const [MANname, setMANname] = useState();\r\n    const [DISname, setDISname] = useState();\r\n    const [RETname, setRETname] = useState();\r\n    const [RMSplace, setRMSplace] = useState();\r\n    const [MANplace, setMANplace] = useState();\r\n    const [DISplace, setDISplace] = useState();\r\n    const [RETplace, setRETplace] = useState();\r\n    const [RMSaddress, setRMSaddress] = useState();\r\n    const [MANaddress, setMANaddress] = useState();\r\n    const [DISaddress, setDISaddress] = useState();\r\n    const [RETaddress, setRETaddress] = useState();\r\n    const [RMS, setRMS] = useState();\r\n    const [MAN, setMAN] = useState();\r\n    const [DIS, setDIS] = useState();\r\n    const [RET, setRET] = useState();\r\n\r\n    const loadWeb3 = async () => {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n            await window.ethereum.enable();\r\n        } else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n            window.alert(\r\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n            );\r\n        }\r\n    };\r\n\r\n    const loadBlockchaindata = async () => {\r\n        setloader(true);\r\n        const web3 = window.web3;\r\n        const accounts = await web3.eth.getAccounts();\r\n        const account = accounts[0];\r\n        setCurrentaccount(account);\r\n        const networkId = await web3.eth.net.getId();\r\n        const networkData = SupplyChainABI.networks[networkId];\r\n        if (networkData) {\r\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\r\n            setSupplyChain(supplychain);\r\n            var i;\r\n            const rmsCtr = await supplychain.methods.rmsCtr().call();\r\n            const rms = {};\r\n            for (i = 0; i < rmsCtr; i++) {\r\n                rms[i] = await supplychain.methods.RMS(i + 1).call();\r\n            }\r\n            setRMS(rms);\r\n            const manCtr = await supplychain.methods.manCtr().call();\r\n            const man = {};\r\n            for (i = 0; i < manCtr; i++) {\r\n                man[i] = await supplychain.methods.MAN(i + 1).call();\r\n            }\r\n            setMAN(man);\r\n            const disCtr = await supplychain.methods.disCtr().call();\r\n            const dis = {};\r\n            for (i = 0; i < disCtr; i++) {\r\n                dis[i] = await supplychain.methods.DIS(i + 1).call();\r\n            }\r\n            setDIS(dis);\r\n            const retCtr = await supplychain.methods.retCtr().call();\r\n            const ret = {};\r\n            for (i = 0; i < retCtr; i++) {\r\n                ret[i] = await supplychain.methods.RET(i + 1).call();\r\n            }\r\n            setRET(ret);\r\n            setloader(false);\r\n        }\r\n        else {\r\n            window.alert('The smart contract is not deployed to current network')\r\n        }\r\n    }\r\n    if (loader) {\r\n        return (\r\n            <div>\r\n                <h1 className=\"wait\">Loading...</h1>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    const redirect_to_home = () => {\r\n        history.push('/')\r\n    }\r\n    const handlerChangeAddressRMS = (event) => {\r\n        setRMSaddress(event.target.value);\r\n    }\r\n    const handlerChangePlaceRMS = (event) => {\r\n        setRMSplace(event.target.value);\r\n    }\r\n    const handlerChangeNameRMS = (event) => {\r\n        setRMSname(event.target.value);\r\n    }\r\n    const handlerChangeAddressMAN = (event) => {\r\n        setMANaddress(event.target.value);\r\n    }\r\n    const handlerChangePlaceMAN = (event) => {\r\n        setMANplace(event.target.value);\r\n    }\r\n    const handlerChangeNameMAN = (event) => {\r\n        setMANname(event.target.value);\r\n    }\r\n    const handlerChangeAddressDIS = (event) => {\r\n        setDISaddress(event.target.value);\r\n    }\r\n    const handlerChangePlaceDIS = (event) => {\r\n        setDISplace(event.target.value);\r\n    }\r\n    const handlerChangeNameDIS = (event) => {\r\n        setDISname(event.target.value);\r\n    }\r\n    const handlerChangeAddressRET = (event) => {\r\n        setRETaddress(event.target.value);\r\n    }\r\n    const handlerChangePlaceRET = (event) => {\r\n        setRETplace(event.target.value);\r\n    }\r\n    const handlerChangeNameRET = (event) => {\r\n        setRETname(event.target.value);\r\n    }\r\n    const handlerSubmitRMS = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.addRMS(RMSaddress, RMSname, RMSplace).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    const handlerSubmitMAN = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.addManufacturer(MANaddress, MANname, MANplace).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    const handlerSubmitDIS = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.addDistributor(DISaddress, DISname, DISplace).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    const handlerSubmitRET = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.addRetailer(RETaddress, RETname, RETplace).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <span><b>Current Account Address:</b> {currentaccount}</span>\r\n            <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm\">HOME</span>\r\n            <h4>Raw Material Suppliers:</h4>\r\n            <form onSubmit={handlerSubmitRMS}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeAddressRMS} placeholder=\"Ethereum Address\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameRMS} placeholder=\"Raw Material Supplier Name\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangePlaceRMS} placeholder=\"Based In\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitRMS}>Register</button>\r\n            </form>\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Place</th>\r\n                        <th scope=\"col\">Ethereum Address</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(RMS).map(function (key) {\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{RMS[key].id}</td>\r\n                                <td>{RMS[key].name}</td>\r\n                                <td>{RMS[key].place}</td>\r\n                                <td>{RMS[key].addr}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <h4>Manufacturers:</h4>\r\n            <form onSubmit={handlerSubmitMAN}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeAddressMAN} placeholder=\"Ethereum Address\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameMAN} placeholder=\"Manufacturer Name\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangePlaceMAN} placeholder=\"Based In\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitMAN}>Register</button>\r\n            </form>\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Place</th>\r\n                        <th scope=\"col\">Ethereum Address</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(MAN).map(function (key) {\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{MAN[key].id}</td>\r\n                                <td>{MAN[key].name}</td>\r\n                                <td>{MAN[key].place}</td>\r\n                                <td>{MAN[key].addr}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <h4>Distributors:</h4>\r\n            <form onSubmit={handlerSubmitDIS}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeAddressDIS} placeholder=\"Ethereum Address\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameDIS} placeholder=\"Distributor Name\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangePlaceDIS} placeholder=\"Based In\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitDIS}>Register</button>\r\n            </form>\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Place</th>\r\n                        <th scope=\"col\">Ethereum Address</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(DIS).map(function (key) {\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{DIS[key].id}</td>\r\n                                <td>{DIS[key].name}</td>\r\n                                <td>{DIS[key].place}</td>\r\n                                <td>{DIS[key].addr}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <h4>Retailers:</h4>\r\n            <form onSubmit={handlerSubmitRET}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeAddressRET} placeholder=\"Ethereum Address\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameRET} placeholder=\"Retailer Name\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangePlaceRET} placeholder=\"Based In\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitRET}>Register</button>\r\n            </form>\r\n            <table className=\"table table-sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Place</th>\r\n                        <th scope=\"col\">Ethereum Address</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(RET).map(function (key) {\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{RET[key].id}</td>\r\n                                <td>{RET[key].name}</td>\r\n                                <td>{RET[key].place}</td>\r\n                                <td>{RET[key].addr}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignRoles\r\n","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nfunction Home() {\r\n    const history = useHistory()\r\n    const redirect_to_roles = () => {\r\n        history.push('/roles')\r\n    }\r\n    const redirect_to_addmed = () => {\r\n        history.push('/addmed')\r\n    }\r\n    const redirect_to_supply = () => {\r\n        history.push('/supply')\r\n    }\r\n    const redirect_to_track = () => {\r\n        history.push('/track')\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Pharmaceutical Supply Chain Flow :- </h3>\r\n            <br />\r\n            <h6>(Note: Here <u>Owner</u> is the person who deployed the smart contract on the blockchain)</h6>\r\n            <h5>Step 1: Owner Should Register Raw material suppliers ,Manufacturers, Distributors and Retailers</h5>\r\n            <h6>(Note: This is a one time step. Skip to step 2 if already done)</h6>\r\n            <button onClick={redirect_to_roles} className=\"btn btn-outline-primary btn-sm\">Register</button>\r\n            <br />\r\n            <h5>Step 2: Owner should order medicines</h5>\r\n            <button onClick={redirect_to_addmed} className=\"btn btn-outline-primary btn-sm\">Order Medicines</button>\r\n            <br />\r\n            <h5>Step 3: Control Supply Chain</h5>\r\n            <button onClick={redirect_to_supply} className=\"btn btn-outline-primary btn-sm\">Control Supply Chain</button>\r\n            <br />\r\n            <hr />\r\n            <br />\r\n            <h5><b>Track</b> the medicines:</h5>\r\n            <button onClick={redirect_to_track} className=\"btn btn-outline-primary btn-sm\">Track Medicines</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Web3 from \"web3\";\r\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\"\r\n\r\nfunction AddMed() {\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        loadWeb3();\r\n        loadBlockchaindata();\r\n    }, [])\r\n\r\n    const [currentaccount, setCurrentaccount] = useState(\"\");\r\n    const [loader, setloader] = useState(true);\r\n    const [SupplyChain, setSupplyChain] = useState();\r\n    const [MED, setMED] = useState();\r\n    const [MedName, setMedName] = useState();\r\n    const [MedDes, setMedDes] = useState();\r\n    const [MedStage, setMedStage] = useState();\r\n\r\n\r\n    const loadWeb3 = async () => {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n            await window.ethereum.enable();\r\n        } else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n            window.alert(\r\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n            );\r\n        }\r\n    };\r\n\r\n    const loadBlockchaindata = async () => {\r\n        setloader(true);\r\n        const web3 = window.web3;\r\n        const accounts = await web3.eth.getAccounts();\r\n        const account = accounts[0];\r\n        setCurrentaccount(account);\r\n        const networkId = await web3.eth.net.getId();\r\n        const networkData = SupplyChainABI.networks[networkId];\r\n        if (networkData) {\r\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\r\n            setSupplyChain(supplychain);\r\n            var i;\r\n            const medCtr = await supplychain.methods.medicineCtr().call();\r\n            const med = {};\r\n            const medStage = [];\r\n            for (i = 0; i < medCtr; i++) {\r\n                med[i] = await supplychain.methods.MedicineStock(i + 1).call();\r\n                medStage[i] = await supplychain.methods.showStage(i + 1).call();\r\n            }\r\n            setMED(med);\r\n            setMedStage(medStage);\r\n            setloader(false);\r\n        }\r\n        else {\r\n            window.alert('The smart contract is not deployed to current network')\r\n        }\r\n    }\r\n    if (loader) {\r\n        return (\r\n            <div>\r\n                <h1 className=\"wait\">Loading...</h1>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    const redirect_to_home = () => {\r\n        history.push('/')\r\n    }\r\n    const handlerChangeNameMED = (event) => {\r\n        setMedName(event.target.value);\r\n    }\r\n    const handlerChangeDesMED = (event) => {\r\n        setMedDes(event.target.value);\r\n    }\r\n    const handlerSubmitMED = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.addMedicine(MedName, MedDes).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <span><b>Current Account Address:</b> {currentaccount}</span>\r\n            <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n            <br />\r\n            <h5>Add Medicine Order:</h5>\r\n            <form onSubmit={handlerSubmitMED}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeNameMED} placeholder=\"Medicine Name\" required />\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeDesMED} placeholder=\"Medicine Description\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitMED}>Order</button>\r\n            </form>\r\n            <br />\r\n            <h5>Ordered Medicines:</h5>\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Current Stage</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(MED).map(function (key) {\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{MED[key].id}</td>\r\n                                <td>{MED[key].name}</td>\r\n                                <td>{MED[key].description}</td>\r\n                                <td>\r\n                                    {\r\n                                        MedStage[key]\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMed\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Web3 from \"web3\";\r\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\"\r\n\r\nfunction Supply() {\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        loadWeb3();\r\n        loadBlockchaindata();\r\n    }, [])\r\n\r\n    const [currentaccount, setCurrentaccount] = useState(\"\");\r\n    const [loader, setloader] = useState(true);\r\n    const [SupplyChain, setSupplyChain] = useState();\r\n    const [MED, setMED] = useState();\r\n    const [MedStage, setMedStage] = useState();\r\n    const [ID, setID] = useState();\r\n\r\n\r\n    const loadWeb3 = async () => {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n            await window.ethereum.enable();\r\n        } else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n            window.alert(\r\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n            );\r\n        }\r\n    };\r\n    const loadBlockchaindata = async () => {\r\n        setloader(true);\r\n        const web3 = window.web3;\r\n        const accounts = await web3.eth.getAccounts();\r\n        const account = accounts[0];\r\n        setCurrentaccount(account);\r\n        const networkId = await web3.eth.net.getId();\r\n        const networkData = SupplyChainABI.networks[networkId];\r\n        if (networkData) {\r\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\r\n            setSupplyChain(supplychain);\r\n            var i;\r\n            const medCtr = await supplychain.methods.medicineCtr().call();\r\n            const med = {};\r\n            const medStage = [];\r\n            for (i = 0; i < medCtr; i++) {\r\n                med[i] = await supplychain.methods.MedicineStock(i + 1).call();\r\n                medStage[i] = await supplychain.methods.showStage(i + 1).call();\r\n            }\r\n            setMED(med);\r\n            setMedStage(medStage);\r\n            setloader(false);\r\n        }\r\n        else {\r\n            window.alert('The smart contract is not deployed to current network')\r\n        }\r\n    }\r\n    if (loader) {\r\n        return (\r\n            <div>\r\n                <h1 className=\"wait\">Loading...</h1>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    const redirect_to_home = () => {\r\n        history.push('/')\r\n    }\r\n    const handlerChangeID = (event) => {\r\n        setID(event.target.value);\r\n    }\r\n    const handlerSubmitRMSsupply = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.RMSsupply(ID).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    const handlerSubmitManufacturing = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.Manufacturing(ID).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    const handlerSubmitDistribute = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.Distribute(ID).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    const handlerSubmitRetail = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.Retail(ID).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    const handlerSubmitSold = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            var reciept = await SupplyChain.methods.sold(ID).send({ from: currentaccount });\r\n            if (reciept) {\r\n                loadBlockchaindata();\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(\"An error occured!!!\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <span><b>Current Account Address:</b> {currentaccount}</span>\r\n            <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n            <h6><b>Supply Chain Flow:</b></h6>\r\n            <p>Medicine Order -&gt; Raw Material Supplier -&gt; Manufacturer -&gt; Distributor -&gt; Retailer -&gt; Consumer</p>\r\n            <table className=\"table table-sm table-dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Medicine ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Current Processing Stage</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(MED).map(function (key) {\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{MED[key].id}</td>\r\n                                <td>{MED[key].name}</td>\r\n                                <td>{MED[key].description}</td>\r\n                                <td>\r\n                                    {\r\n                                        MedStage[key]\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <h5><b>Step 1: Supply Raw Materials</b>(Only a registered Raw Material Supplier can perform this step):-</h5>\r\n            <form onSubmit={handlerSubmitRMSsupply}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitRMSsupply}>Supply</button>\r\n            </form>\r\n            <hr />\r\n            <br />\r\n            <h5><b>Step 2: Manufacture</b>(Only a registered Manufacturer can perform this step):-</h5>\r\n            <form onSubmit={handlerSubmitManufacturing}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitManufacturing}>Manufacture</button>\r\n            </form>\r\n            <hr />\r\n            <br />\r\n            <h5><b>Step 3: Distribute</b>(Only a registered Distributor can perform this step):-</h5>\r\n            <form onSubmit={handlerSubmitDistribute}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitDistribute}>Distribute</button>\r\n            </form>\r\n            <hr />\r\n            <br />\r\n            <h5><b>Step 4: Retail</b>(Only a registered Retailer can perform this step):-</h5>\r\n            <form onSubmit={handlerSubmitRetail}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitRetail}>Retail</button>\r\n            </form>\r\n            <hr />\r\n            <br />\r\n            <h5><b>Step 5: Mark as sold</b>(Only a registered Retailer can perform this step):-</h5>\r\n            <form onSubmit={handlerSubmitSold}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmitSold}>Sold</button>\r\n            </form>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Supply\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Web3 from \"web3\";\r\nimport SupplyChainABI from \"./artifacts/SupplyChain.json\"\r\n\r\nfunction Track() {\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        loadWeb3();\r\n        loadBlockchaindata();\r\n    }, [])\r\n\r\n    const [currentaccount, setCurrentaccount] = useState(\"\");\r\n    const [loader, setloader] = useState(true);\r\n    const [SupplyChain, setSupplyChain] = useState();\r\n    const [MED, setMED] = useState();\r\n    const [MedStage, setMedStage] = useState();\r\n    const [ID, setID] = useState();\r\n    const [RMS, setRMS] = useState();\r\n    const [MAN, setMAN] = useState();\r\n    const [DIS, setDIS] = useState();\r\n    const [RET, setRET] = useState();\r\n    const [TrackTillSold, showTrackTillSold] = useState(false);\r\n    const [TrackTillRetail, showTrackTillRetail] = useState(false);\r\n    const [TrackTillDistribution, showTrackTillDistribution] = useState(false);\r\n    const [TrackTillManufacture, showTrackTillManufacture] = useState(false);\r\n    const [TrackTillRMS, showTrackTillRMS] = useState(false);\r\n    const [TrackTillOrdered, showTrackTillOrdered] = useState(false);\r\n\r\n    const loadWeb3 = async () => {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n            await window.ethereum.enable();\r\n        } else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n            window.alert(\r\n                \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n            );\r\n        }\r\n    };\r\n    const loadBlockchaindata = async () => {\r\n        setloader(true);\r\n        const web3 = window.web3;\r\n        const accounts = await web3.eth.getAccounts();\r\n        const account = accounts[0];\r\n        setCurrentaccount(account);\r\n        const networkId = await web3.eth.net.getId();\r\n        const networkData = SupplyChainABI.networks[networkId];\r\n        if (networkData) {\r\n            const supplychain = new web3.eth.Contract(SupplyChainABI.abi, networkData.address);\r\n            setSupplyChain(supplychain);\r\n            var i;\r\n            const medCtr = await supplychain.methods.medicineCtr().call();\r\n            const med = {};\r\n            const medStage = [];\r\n            for (i = 0; i < medCtr; i++) {\r\n                med[i + 1] = await supplychain.methods.MedicineStock(i + 1).call();\r\n                medStage[i + 1] = await supplychain.methods.showStage(i + 1).call();\r\n            }\r\n            setMED(med);\r\n            setMedStage(medStage);\r\n            const rmsCtr = await supplychain.methods.rmsCtr().call();\r\n            const rms = {};\r\n            for (i = 0; i < rmsCtr; i++) {\r\n                rms[i + 1] = await supplychain.methods.RMS(i + 1).call();\r\n            }\r\n            setRMS(rms);\r\n            const manCtr = await supplychain.methods.manCtr().call();\r\n            const man = {};\r\n            for (i = 0; i < manCtr; i++) {\r\n                man[i + 1] = await supplychain.methods.MAN(i + 1).call();\r\n            }\r\n            setMAN(man);\r\n            const disCtr = await supplychain.methods.disCtr().call();\r\n            const dis = {};\r\n            for (i = 0; i < disCtr; i++) {\r\n                dis[i + 1] = await supplychain.methods.DIS(i + 1).call();\r\n            }\r\n            setDIS(dis);\r\n            const retCtr = await supplychain.methods.retCtr().call();\r\n            const ret = {};\r\n            for (i = 0; i < retCtr; i++) {\r\n                ret[i + 1] = await supplychain.methods.RET(i + 1).call();\r\n            }\r\n            setRET(ret);\r\n            setloader(false);\r\n        }\r\n        else {\r\n            window.alert('The smart contract is not deployed to current network')\r\n        }\r\n    }\r\n    if (loader) {\r\n        return (\r\n            <div>\r\n                <h1 className=\"wait\">Loading...</h1>\r\n            </div>\r\n        )\r\n    }\r\n    if (TrackTillSold) {\r\n        return (\r\n            <div className=\"container-xl\">\r\n                <article className=\"col-4\">\r\n                    <h3><b><u>Medicine:</u></b></h3>\r\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\r\n                    <br />\r\n                    <span><b>Name:</b> {MED[ID].name}</span>\r\n                    <br />\r\n                    <span><b>Description: </b>{MED[ID].description}</span>\r\n                    <br />\r\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\r\n                </article>\r\n                <hr />\r\n                <br />\r\n                <section className=\"row\">\r\n\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Raw Materials Supplied by:</u></h4>\r\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\r\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\r\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Manufactured by:</u></h4>\r\n                        <p><b>Manufacturer ID: </b>{MAN[MED[ID].MANid].id}</p>\r\n                        <p><b>Name:</b> {MAN[MED[ID].MANid].name}</p>\r\n                        <p><b>Place: </b>{MAN[MED[ID].MANid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Distributed by:</u></h4>\r\n                        <p><b>Distributor ID: </b>{DIS[MED[ID].DISid].id}</p>\r\n                        <p><b>Name:</b> {DIS[MED[ID].DISid].name}</p>\r\n                        <p><b>Place: </b>{DIS[MED[ID].DISid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Retailed by:</u></h4>\r\n                        <p><b>Retailer ID: </b>{RET[MED[ID].RETid].id}</p>\r\n                        <p><b>Name:</b> {RET[MED[ID].RETid].name}</p>\r\n                        <p><b>Place: </b>{RET[MED[ID].RETid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Sold</u></h4>\r\n                    </article>\r\n                </section>\r\n                <button onClick={() => {\r\n                    showTrackTillSold(false);\r\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\r\n                <span onClick={() => {\r\n                    history.push('/')\r\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n            </div >\r\n        )\r\n    }\r\n    if (TrackTillRetail) {\r\n        return (\r\n            <div className=\"container-xl\">\r\n                <article className=\"col-4\">\r\n                    <h3><b><u>Medicine:</u></b></h3>\r\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\r\n                    <br />\r\n                    <span><b>Name:</b> {MED[ID].name}</span>\r\n                    <br />\r\n                    <span><b>Description: </b>{MED[ID].description}</span>\r\n                    <br />\r\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\r\n                </article>\r\n                <hr />\r\n                <br />\r\n                <section className=\"row\">\r\n\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Raw Materials Supplied by:</u></h4>\r\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\r\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\r\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Manufactured by:</u></h4>\r\n                        <p><b>Manufacturer ID: </b>{MAN[MED[ID].MANid].id}</p>\r\n                        <p><b>Name:</b> {MAN[MED[ID].MANid].name}</p>\r\n                        <p><b>Place: </b>{MAN[MED[ID].MANid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Distributed by:</u></h4>\r\n                        <p><b>Distributor ID: </b>{DIS[MED[ID].DISid].id}</p>\r\n                        <p><b>Name:</b> {DIS[MED[ID].DISid].name}</p>\r\n                        <p><b>Place: </b>{DIS[MED[ID].DISid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Retailed by:</u></h4>\r\n                        <p><b>Retailer ID: </b>{RET[MED[ID].RETid].id}</p>\r\n                        <p><b>Name:</b> {RET[MED[ID].RETid].name}</p>\r\n                        <p><b>Place: </b>{RET[MED[ID].RETid].place}</p>\r\n                    </article>\r\n                </section>\r\n                <button onClick={() => {\r\n                    showTrackTillRetail(false);\r\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\r\n                <span onClick={() => {\r\n                    history.push('/')\r\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n            </div >\r\n        )\r\n    }\r\n    if (TrackTillDistribution) {\r\n        return (\r\n            <div className=\"container-xl\">\r\n                <article className=\"col-4\">\r\n                    <h3><b><u>Medicine:</u></b></h3>\r\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\r\n                    <br />\r\n                    <span><b>Name:</b> {MED[ID].name}</span>\r\n                    <br />\r\n                    <span><b>Description: </b>{MED[ID].description}</span>\r\n                    <br />\r\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\r\n                </article>\r\n                <hr />\r\n                <br />\r\n                <section className=\"row\">\r\n\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Raw Materials Supplied by:</u></h4>\r\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\r\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\r\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Manufactured by:</u></h4>\r\n                        <p><b>Manufacturer ID: </b>{MAN[MED[ID].MANid].id}</p>\r\n                        <p><b>Name:</b> {MAN[MED[ID].MANid].name}</p>\r\n                        <p><b>Place: </b>{MAN[MED[ID].MANid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Distributed by:</u></h4>\r\n                        <p><b>Distributor ID: </b>{DIS[MED[ID].DISid].id}</p>\r\n                        <p><b>Name:</b> {DIS[MED[ID].DISid].name}</p>\r\n                        <p><b>Place: </b>{DIS[MED[ID].DISid].place}</p>\r\n                    </article>\r\n                </section>\r\n                <button onClick={() => {\r\n                    showTrackTillDistribution(false);\r\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\r\n                <span onClick={() => {\r\n                    history.push('/')\r\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n            </div >\r\n        )\r\n    }\r\n    if (TrackTillManufacture) {\r\n        return (\r\n            <div className=\"container-xl\">\r\n                <article className=\"col-4\">\r\n                    <h3><b><u>Medicine:</u></b></h3>\r\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\r\n                    <br />\r\n                    <span><b>Name:</b> {MED[ID].name}</span>\r\n                    <br />\r\n                    <span><b>Description: </b>{MED[ID].description}</span>\r\n                    <br />\r\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\r\n                </article>\r\n                <hr />\r\n                <br />\r\n                <section className=\"row\">\r\n\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Raw Materials Supplied by:</u></h4>\r\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\r\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\r\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\r\n                    </article>\r\n                    <span>&#10132;</span>\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Manufactured by:</u></h4>\r\n                        <p><b>Manufacturer ID: </b>{MAN[MED[ID].MANid].id}</p>\r\n                        <p><b>Name:</b> {MAN[MED[ID].MANid].name}</p>\r\n                        <p><b>Place: </b>{MAN[MED[ID].MANid].place}</p>\r\n                    </article>\r\n                </section>\r\n                <button onClick={() => {\r\n                    showTrackTillManufacture(false);\r\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\r\n                <span onClick={() => {\r\n                    history.push('/')\r\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n            </div >\r\n        )\r\n    }\r\n    if (TrackTillRMS) {\r\n        return (\r\n            <div className=\"container-xl\">\r\n                <article className=\"col-4\">\r\n                    <h3><b><u>Medicine:</u></b></h3>\r\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\r\n                    <br />\r\n                    <span><b>Name:</b> {MED[ID].name}</span>\r\n                    <br />\r\n                    <span><b>Description: </b>{MED[ID].description}</span>\r\n                    <br />\r\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\r\n                </article>\r\n                <hr />\r\n                <br />\r\n                <section className=\"row\">\r\n\r\n                    <article className=\"col-3\">\r\n                        <h4><u>Raw Materials Supplied by:</u></h4>\r\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\r\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\r\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\r\n                    </article>\r\n                </section>\r\n                <button onClick={() => {\r\n                    showTrackTillRMS(false);\r\n                }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\r\n                <span onClick={() => {\r\n                    history.push('/')\r\n                }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n            </div >\r\n        )\r\n    }\r\n    if (TrackTillOrdered) {\r\n        return (\r\n            <div className=\"container-xl\">\r\n                <article className=\"col-4\">\r\n                    <h3><b><u>Medicine:</u></b></h3>\r\n                    <span><b>Medicine ID: </b>{MED[ID].id}</span>\r\n                    <br />\r\n                    <span><b>Name:</b> {MED[ID].name}</span>\r\n                    <br />\r\n                    <span><b>Description: </b>{MED[ID].description}</span>\r\n                    <br />\r\n                    <span><b>Current stage: </b>{MedStage[ID]}</span>\r\n                    <hr />\r\n                    <br />\r\n                    <h5>Medicine Not Yet Processed...</h5>\r\n                    <button onClick={() => {\r\n                        showTrackTillOrdered(false);\r\n                    }} className=\"btn btn-outline-success btn-sm\">Track Another Item</button>\r\n                    <span onClick={() => {\r\n                        history.push('/')\r\n                    }} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n                </article>\r\n                {/* <section className=\"row\">\r\n                    \r\n                    <article className=\"col-3\">\r\n                        <h4><u>Raw Materials Supplied by:</u></h4>\r\n                        <p><b>Supplier ID: </b>{RMS[MED[ID].RMSid].id}</p>\r\n                        <p><b>Name:</b> {RMS[MED[ID].RMSid].name}</p>\r\n                        <p><b>Place: </b>{RMS[MED[ID].RMSid].place}</p>\r\n                    </article>\r\n                </section> */}\r\n            </div >\r\n        )\r\n    }\r\n    const handlerChangeID = (event) => {\r\n        setID(event.target.value);\r\n    }\r\n    const redirect_to_home = () => {\r\n        history.push('/')\r\n    }\r\n    const handlerSubmit = async (event) => {\r\n        event.preventDefault();\r\n        var ctr = await SupplyChain.methods.medicineCtr().call();\r\n        if (!((ID > 0) && (ID <= ctr)))\r\n            alert(\"Invalid Medicine ID!!!\");\r\n        else {\r\n            // eslint-disable-next-line\r\n            if (MED[ID].stage == 5)\r\n                showTrackTillSold(true);\r\n            // eslint-disable-next-line\r\n            else if (MED[ID].stage == 4)\r\n                showTrackTillRetail(true);\r\n            // eslint-disable-next-line\r\n            else if (MED[ID].stage == 3)\r\n                showTrackTillDistribution(true);\r\n            // eslint-disable-next-line\r\n            else if (MED[ID].stage == 2)\r\n                showTrackTillManufacture(true);\r\n            // eslint-disable-next-line\r\n            else if (MED[ID].stage == 1)\r\n                showTrackTillRMS(true);\r\n            else\r\n                showTrackTillOrdered(true);\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span><b>Current Account Address:</b> {currentaccount}</span>\r\n            <span onClick={redirect_to_home} className=\"btn btn-outline-danger btn-sm\"> HOME</span>\r\n            <table className=\"table table-sm table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Medicine ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Description</th>\r\n                        <th scope=\"col\">Current Processing Stage</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(MED).map(function (key) {\r\n                        return (\r\n                            <tr key={key}>\r\n                                <td>{MED[key].id}</td>\r\n                                <td>{MED[key].name}</td>\r\n                                <td>{MED[key].description}</td>\r\n                                <td>\r\n                                    {\r\n                                        MedStage[key]\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <h5>Enter Medicine ID to Track it</h5>\r\n\r\n            <form onSubmit={handlerSubmit}>\r\n                <input className=\"form-control-sm\" type=\"text\" onChange={handlerChangeID} placeholder=\"Enter Medicine ID\" required />\r\n                <button className=\"btn btn-outline-success btn-sm\" onSubmit={handlerSubmit}>Track</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Track\r\n","import './App.css';\r\nimport AssignRoles from './AssignRoles';\r\nimport Home from './Home';\r\nimport AddMed from './AddMed';\r\nimport Supply from './Supply'\r\nimport Track from './Track'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/roles\" component={AssignRoles} />\r\n          <Route path=\"/addmed\" component={AddMed} />\r\n          <Route path=\"/supply\" component={Supply} />\r\n          <Route path=\"/track\" component={Track} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}